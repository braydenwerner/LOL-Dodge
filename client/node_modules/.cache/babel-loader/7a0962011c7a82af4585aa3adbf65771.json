{"ast":null,"code":"var _jsxFileName = \"/home/breadone/Projects/LOL-Dodge/loldodge/client/src/AppProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, createContext, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './styles/exports';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext('light');\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n\n  const [themeMode, setThemeMode] = useState(localStorage.getItem('theme') || 'light');\n  const currentTheme = theme[themeMode];\n  useEffect(() => {\n    localStorage.setItem('theme', themeMode);\n  }, [themeMode]);\n\n  const toggleTheme = () => {\n    setThemeMode(oldTheme => {\n      if (oldTheme === 'light') {\n        return 'dark';\n      } else {\n        return 'light';\n      }\n    });\n  }; //  combine into one object for global ThemeContext state\n\n\n  const value = {\n    themeMode,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: currentTheme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"TKEEIESwxd267taaPFWPZZ5pfJs=\");\n\n_c = AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/home/breadone/Projects/LOL-Dodge/loldodge/client/src/AppProvider.tsx"],"names":["React","useEffect","createContext","useState","ThemeProvider","theme","ThemeContext","AppProvider","children","themeMode","setThemeMode","localStorage","getItem","currentTheme","setItem","toggleTheme","oldTheme","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,aAA3B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SAAuBC,KAAvB,QAAoC,kBAApC;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,OAAD,CAAlC;AAEP,OAAO,MAAMK,WAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CACxCQ,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,OADO,CAA1C;AAGA,QAAMC,YAAY,GAAIR,KAAD,CAAeI,SAAf,CAArB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACG,OAAb,CAAqB,OAArB,EAA8BL,SAA9B;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;;AAIA,QAAMM,WAAW,GAAG,MAAM;AACxBL,IAAAA,YAAY,CAAEM,QAAD,IAAc;AACzB,UAAIA,QAAQ,KAAK,OAAjB,EAA0B;AACxB,eAAO,MAAP;AACD,OAFD,MAEO;AACL,eAAO,OAAP;AACD;AACF,KANW,CAAZ;AAOD,GARD,CAVqD,CAoBrD;;;AACA,QAAMC,KAAU,GAAG;AAAER,IAAAA,SAAF;AAAaM,IAAAA;AAAb,GAAnB;AACA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEE,KAA9B;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEJ,YAAtB;AAAA,gBAAqCL;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BM;;GAAMD,W;;KAAAA,W","sourcesContent":["import React, { useEffect, createContext, useState } from 'react'\nimport { ThemeProvider } from 'styled-components'\n\nimport { GlobalStyles, theme } from './styles/exports'\n\nexport const ThemeContext = createContext('light')\n\nexport const AppProvider: React.FC = ({ children }) => {\n  const [themeMode, setThemeMode] = useState(\n    localStorage.getItem('theme') || 'light'\n  )\n  const currentTheme = (theme as any)[themeMode]\n\n  useEffect(() => {\n    localStorage.setItem('theme', themeMode)\n  }, [themeMode])\n\n  const toggleTheme = () => {\n    setThemeMode((oldTheme) => {\n      if (oldTheme === 'light') {\n        return 'dark'\n      } else {\n        return 'light'\n      }\n    })\n  }\n\n  //  combine into one object for global ThemeContext state\n  const value: any = { themeMode, toggleTheme }\n  return (\n    <ThemeContext.Provider value={value}>\n      <ThemeProvider theme={currentTheme}>{children}</ThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}