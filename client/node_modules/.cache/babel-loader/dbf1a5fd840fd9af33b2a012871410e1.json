{"ast":null,"code":"var _jsxFileName = \"/home/breadone/Projects/LOL-Dodge/loldodge/client/src/pages/ChampSelectPage/ChampSelectPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport { ThemeContext } from '../../AppProvider';\nimport { theme } from '../../styles/exports';\nimport './ChampSelectPage.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChampSelectPage = () => {\n  _s();\n\n  const {\n    themeMode\n  } = useContext(ThemeContext);\n  const textRef = useRef(null);\n  const [summonerNames, setSummonerNames] = useState([]);\n  const [summonerData, setSummonerData] = useState();\n  useEffect(() => {}, []);\n  useEffect(() => {\n    querySummonerData(summonerNames);\n  }, [summonerNames]);\n\n  const querySummonerData = async summonerNames => {\n    const res = await fetch('http://localhost:3000/getSummonerData', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(summonerNames)\n    });\n    console.log(res.json());\n    setSummonerData(res);\n  };\n\n  console.log(theme);\n  console.log(themeMode);\n  console.log(theme[themeMode].colors.background);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"champ-select-paste-textarea\",\n      ref: textRef,\n      rows: 6,\n      placeholder: \" xtremesoccer2012 joined the lobby test joined the lobby\",\n      style: {\n        backgroundColor: `${theme[themeMode].colors.secondary}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => querySummonerData(['lokimonsta']),\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChampSelectPage, \"U1KyUin3VNeO3zo8vWPbbT1fpVo=\");\n\n_c = ChampSelectPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChampSelectPage\");","map":{"version":3,"sources":["/home/breadone/Projects/LOL-Dodge/loldodge/client/src/pages/ChampSelectPage/ChampSelectPage.tsx"],"names":["React","useRef","useState","useEffect","useContext","ThemeContext","theme","ChampSelectPage","themeMode","textRef","summonerNames","setSummonerNames","summonerData","setSummonerData","querySummonerData","res","fetch","method","headers","Accept","body","JSON","stringify","console","log","json","colors","background","backgroundColor","secondary"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,KAAT,QAAsB,sBAAtB;AAEA,OAAO,wBAAP;;;AAEA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAqBJ,UAAU,CAACC,YAAD,CAArC;AACA,QAAMI,OAAO,GAAGR,MAAM,CAAC,IAAD,CAAtB;AAEA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAW,EAAX,CAAlD;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AAEAA,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,iBAAiB,CAACJ,aAAD,CAAjB;AACD,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;;AAIA,QAAMI,iBAAiB,GAAG,MAAOJ,aAAP,IAAmC;AAC3D,UAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAD,EAA0C;AAC/DC,MAAAA,MAAM,EAAE,MADuD;AAE/DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT,OAFsD;AAM/DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,aAAf;AANyD,KAA1C,CAAvB;AAQAa,IAAAA,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACU,IAAJ,EAAZ;AACAZ,IAAAA,eAAe,CAACE,GAAD,CAAf;AACD,GAXD;;AAaAQ,EAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAalB,KAAD,CAAeE,SAAf,EAA0BkB,MAA1B,CAAiCC,UAA7C;AACA,sBACE;AAAA,4BACE;AACE,MAAA,EAAE,EAAC,6BADL;AAEE,MAAA,GAAG,EAAElB,OAFP;AAGE,MAAA,IAAI,EAAE,CAHR;AAIE,MAAA,WAAW,EAAC,0DAJd;AAOE,MAAA,KAAK,EAAE;AACLmB,QAAAA,eAAe,EAAG,GAAGtB,KAAD,CAAeE,SAAf,EAA0BkB,MAA1B,CAAiCG,SAAU;AAD1D;AAPT;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAQ,MAAA,OAAO,EAAE,MAAMf,iBAAiB,CAAC,CAAC,YAAD,CAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAgBD,CA7CM;;GAAMP,e;;KAAAA,e","sourcesContent":["import React, { useRef, useState, useEffect, useContext } from 'react'\n\nimport { ThemeContext } from '../../AppProvider'\nimport { theme } from '../../styles/exports'\n\nimport './ChampSelectPage.scss'\n\nexport const ChampSelectPage: React.FC = () => {\n  const { themeMode }: any = useContext(ThemeContext as any)\n  const textRef = useRef(null)\n\n  const [summonerNames, setSummonerNames] = useState<string[]>([])\n  const [summonerData, setSummonerData] = useState<object>()\n\n  useEffect(() => {}, [])\n\n  useEffect(() => {\n    querySummonerData(summonerNames)\n  }, [summonerNames])\n\n  const querySummonerData = async (summonerNames: string[]) => {\n    const res = await fetch('http://localhost:3000/getSummonerData', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(summonerNames)\n    })\n    console.log(res.json())\n    setSummonerData(res)\n  }\n\n  console.log(theme)\n  console.log(themeMode)\n  console.log((theme as any)[themeMode].colors.background)\n  return (\n    <>\n      <textarea\n        id=\"champ-select-paste-textarea\"\n        ref={textRef}\n        rows={6}\n        placeholder=\"\n      xtremesoccer2012 joined the lobby\n      test joined the lobby\"\n        style={{\n          backgroundColor: `${(theme as any)[themeMode].colors.secondary}`\n        }}\n      ></textarea>\n      <button onClick={() => querySummonerData(['lokimonsta'])}>Click</button>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}